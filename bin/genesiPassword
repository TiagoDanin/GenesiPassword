#!/usr/bin/env lua5.3
genesiPassword = require('genesiPassaword')

command = function()
	local check = false
	local file = false
	local dir = falsew
	local columns = 1
	local len = 10
	local type_p = {}

	while true do
		if arg[1] == nil then
			break
		elseif arg[1] == '--type' or arg[1] == '-t' and arg[2] then
			check = true
			table.insert(type_p, arg[2])
			table.remove(arg, 2)
		elseif arg[1] == '--len' or arg[1] == '-l' and arg[2] then
			len = arg[2]
			table.remove(arg, 2)
		elseif arg[1] == '--hellp' or arg[1] == '-h' then
			help = true
		elseif arg[1] == '--dir' or arg[1] == '-d' and arg[2] then
			dir = arg[2]
			table.remove(arg, 2)
		elseif arg[1] == '--sname' or arg[1] == '-s' or arg[1] == '-n' and arg[2] then
			file = true
			name = arg[2]
			table.remove(arg, 2)
		elseif arg[1] == '--columns' or arg[1] == '-c' and arg[2] then
			columns = arg[2]
			table.remove(arg, 2)
		else
			print(arg[1] .. ' Invalid!')
		end
		table.remove(arg, 1)
	end

	function help_view ()
		print('                  Help                     ')
		print('  Help                        -h --help    ')
		print('  Type                        -t --type    ')
		print('  Len Password                -l --len     ')
		print('  Salve file in [name].txt    -s -n --sname')
		print('  Dir for file                -d --dir     ')
		print('  Columns in file             -c --columns ')
		print('                                           ')
		print('                   By TiagoDanin           ')
		return false
	end

	if help then
		return help_view()
	elseif not check then
		return help_view()
	end

	if file and len and type and name then
		return print(genesiPassword.save(type_p, len, dir, name, columns))
	elseif len and type then
		return print(genesiPassword.genesi(type_p, len))
	else
		return help_view()
	end
end

if arg[1] then
	return command()
end

welcome = function(view_list)

	local text = 'Welcome - Genesi Password (GLP v3) - By Tiago Danin\n\n'
	local help = [[
	Help:
	new   - New password
	file  - New password (file .txt)
	info  - View info
	help  - View help
	exit  - Exit

	or via command line:
	$ genesiPassword -h
	]]

	if view_list then
		return help
	end
	return text .. help
end

input = function(answer)

	if answer then
		io.write(answer)
	else
		io.write('> ')
	end
	local input = io.read()

	return input
end

command = function(input)

	local command = ''
	local word = string.match(input, '%g+')

	if word == 'echo' then
		command = input:gsub(word..' ', '')
		print(command)
	elseif word == 'new' then
		command = 'new'
		new()
	elseif word == 'file' then
		command = 'file'
		new(true)
	elseif word == 'info' then
		for k,v in pairs(genesiPassword) do
			if v and type(v) == 'string' then
				print(k .. ': ' .. v)
			end
		end
	elseif word == 'help' then
		print(welcome(true))
	elseif word == 'exit' then
		return false
	end
	return command
end

new = function(file_save)

	local msg = 'Type:\n'
	msg = msg .. [[
	1    - Punctuation             (%=&+;)
	2    - Advanced Characters     (º®¾ºµ)
	3    - Number                  (01589)
	4    - Text                    (Aa-Zz)

	all  - All characters
	next - Continue
	]]
	print(msg)

	next = true
	new_gen = {}
	local false_next = false
	while next do
		local type = input('Type: ')
		if type == 'next' then
			print('               \27[31mOK\27[0m')
			next = false
		elseif type == '1' or type == '2' then
			print('               \27[31mOK\27[0m')
			table.insert(new_gen, type)
			false_next = true
		elseif type == '3' or type == '4' then
			print('               \27[31mOK\27[0m')
			table.insert(new_gen, type)
			false_next = true
		elseif type == 'all' then
			table.insert(new_gen, 'all')
			false_next = true
			next = false
		else
			print('\nIncorrect... Consult the \'help\'')
			print(msg)
		end
	end

	if false_next and file_save then
		local tam = input('Len Password: ')
		local number = input('Len gen: ')
		local file = genesiPassword.save(new_gen, tam, false, false, number)
		if file then
			print('Saved in: ' .. file)
		end
	elseif false_next then
		local tam = input('Len Password: ')
		print(genesiPassword.genesi(new_gen, tam))
	else
		print('... Nothing to do here!')
		print(welcome(true))
	end

	return
end

local start = true
print('\n\n')
os.execute('clear')
print(welcome())
while start do
	start = command(input())
end
